"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Loaders = require("./Loaders");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Loader =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Loader, _React$Component);

  function Loader() {
    _classCallCheck(this, Loader);

    return _possibleConstructorReturn(this, _getPrototypeOf(Loader).apply(this, arguments));
  }

  _createClass(Loader, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          size = _this$props.size,
          color = _this$props.color,
          type = _this$props.type,
          className = _this$props.className,
          style = _this$props.style;
      size = size || 64;
      color = color || "black";
      type = type || "spinningBubbles";
      var styleObject = {
        width: size,
        height: size,
        fill: color,
        margin: "0 auto"
      };
      return _react["default"].createElement("div", {
        className: className,
        style: Object.assign({}, styleObject, style || {})
      }, type === "balls" && _react["default"].createElement(_Loaders.Balls, null), type === "bars" && _react["default"].createElement(_Loaders.Bars, null), type === "bubbles" && _react["default"].createElement(_Loaders.Bubbles, null), type === "cubes" && _react["default"].createElement(_Loaders.Cubes, null), type === "cylon" && _react["default"].createElement(_Loaders.Cylon, null), type === "spin" && _react["default"].createElement(_Loaders.Spin, null), type === "spinningBubbles" && _react["default"].createElement(_Loaders.SpinningBubbles, null), type === "spokes" && _react["default"].createElement(_Loaders.Spokes, null));
    }
  }]);

  return Loader;
}(_react["default"].Component);

Loader.propTypes = {
  size: _propTypes["default"].number,
  color: _propTypes["default"].string,
  type: _propTypes["default"].oneOf(["balls", "bars", "bubbles", "cubes", "cylon", "spin", "spinningBubbles", "spokes"]),
  className: _propTypes["default"].string,
  style: _propTypes["default"].object
};
var _default = Loader;
exports["default"] = _default;