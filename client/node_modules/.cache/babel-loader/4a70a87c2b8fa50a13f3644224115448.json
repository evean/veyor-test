{"ast":null,"code":"var _jsxFileName = \"/Users/eandersson018/Documents/Workspace/eve/veyor/client/src/modules/imageSearch/components/Image.jsx\";\n\n/*\n * An image component meant to be displayed in the search results gallery.\n * It will display as a link if a link URL is supplied, otherwise as a plain image.\n */\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nclass Image extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleLoaded = this.handleLoaded.bind(this);\n  }\n\n  handleLoaded() {\n    if (this.props.onLoad) this.props.onLoad(this.props.id);\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          link = _this$props.link,\n          title = _this$props.title,\n          url = _this$props.url;\n    const image = React.createElement(\"img\", {\n      src: url,\n      alt: title,\n      onLoad: this.handleLoaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    const content = !link ? image : React.createElement(\"a\", {\n      href: link,\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, image);\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nImage.propTypes = {\n  author: PropTypes.string,\n  className: PropTypes.string,\n  date: PropTypes.string,\n  link: PropTypes.string,\n  onLoad: PropTypes.func,\n  id: PropTypes.string,\n  title: PropTypes.string,\n  url: PropTypes.string.isRequired\n};\nexport default Image;","map":{"version":3,"sources":["/Users/eandersson018/Documents/Workspace/eve/veyor/client/src/modules/imageSearch/components/Image.jsx"],"names":["PropTypes","React","PureComponent","Image","constructor","props","handleLoaded","bind","onLoad","id","render","className","link","title","url","image","content","propTypes","author","string","date","func","isRequired"],"mappings":";;AAAA;;;;AAKA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,KAAN,SAAoBD,aAApB,CAAkC;AAYhCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKD,KAAL,CAAWG,MAAf,EAAuB,KAAKH,KAAL,CAAWG,MAAX,CAAkB,KAAKH,KAAL,CAAWI,EAA7B;AACxB;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKL,KADtC;AAAA,UACCM,SADD,eACCA,SADD;AAAA,UACYC,IADZ,eACYA,IADZ;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACyBC,GADzB,eACyBA,GADzB;AAEP,UAAMC,KAAK,GAAG;AAAK,MAAA,GAAG,EAAED,GAAV;AAAe,MAAA,GAAG,EAAED,KAApB;AAA2B,MAAA,MAAM,EAAE,KAAKP,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAEA,UAAMU,OAAO,GAAG,CAACJ,IAAD,GACZG,KADY,GAEX;AAAG,MAAA,IAAI,EAAEH,IAAT;AAAe,MAAA,GAAG,EAAC,qBAAnB;AAAyC,MAAA,MAAM,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEG,KADF,CAFL;AAMA,WACE;AAAK,MAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,OADH,CADF;AAKD;;AArC+B;;AAA5Bb,K,CACGc,S,GAAY;AACjBC,EAAAA,MAAM,EAAElB,SAAS,CAACmB,MADD;AAEjBR,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MAFJ;AAGjBC,EAAAA,IAAI,EAAEpB,SAAS,CAACmB,MAHC;AAIjBP,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAJC;AAKjBX,EAAAA,MAAM,EAAER,SAAS,CAACqB,IALD;AAMjBZ,EAAAA,EAAE,EAAET,SAAS,CAACmB,MANG;AAOjBN,EAAAA,KAAK,EAAEb,SAAS,CAACmB,MAPA;AAQjBL,EAAAA,GAAG,EAAEd,SAAS,CAACmB,MAAV,CAAiBG;AARL,C;AAuCrB,eAAenB,KAAf","sourcesContent":["/*\n * An image component meant to be displayed in the search results gallery.\n * It will display as a link if a link URL is supplied, otherwise as a plain image.\n */\n\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nclass Image extends PureComponent {\n  static propTypes = {\n    author: PropTypes.string,\n    className: PropTypes.string,\n    date: PropTypes.string,\n    link: PropTypes.string,\n    onLoad: PropTypes.func,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    url: PropTypes.string.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.handleLoaded = this.handleLoaded.bind(this)\n  }\n\n  handleLoaded() {\n    if (this.props.onLoad) this.props.onLoad(this.props.id)\n  }\n\n  render() {\n    const { className, link, title, url } = this.props\n    const image = <img src={url} alt={title} onLoad={this.handleLoaded} />\n\n    const content = !link\n      ? image\n      : (<a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n          {image}\n        </a>)\n\n    return (\n      <div className={className}>\n        {content}\n      </div>\n    )\n  }\n}\n\nexport default Image\n"]},"metadata":{},"sourceType":"module"}